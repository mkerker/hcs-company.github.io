<!DOCTYPE html>
<html>
	<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="HCS-Company">

    <title>Let's play with Docker</title>

    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/landing-page.css" rel="stylesheet">

    <!-- Custom Fonts -->
    <link href="http://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic" rel="stylesheet" type="text/css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>


	<body>
		<!-- Navigation -->
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header page-scroll">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand page-scroll" href="#home">Home</a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right">  
            	<li>
                    <a class="page-scroll" href="#Index">Index</a>
                </li>            
                <li>
                    <a class="page-scroll" href="#workshop">Workshop</a>
                </li>
                <li>
                    <a class="page-scroll" href="#contact">Contact</a>
                </li>
            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>

<section id="home">
<!-- Header -->
	<div class="intro-header">

		<div class="container">

			<div class="row">
				<div class="col-lg-12">
					<div class="intro-message">
						<h1>Let's play with Docker</h1>
						<h3>A Docker Workshop on 27 juni at HCS-Company by M. Kerker</h3>
						<hr class="intro-divider">
						<h3>In this instructor-led workshop on your own device, you will get a introductory crash course on the Docker platform and how to get started with containers. We will take you through hands-on exercises designed to help you learn the skills to run and build containers and how to distribute container images. So bring your own device with you and let’s play with Docker.</h3>
						<hr class="intro-divider">
					</div>
				</div>
			</div>

		</div>
		<!-- /.container -->

	</div>
	<!-- /.intro-header -->
</section>

		<section id=Index>
    <div class="content-section-b">

        <div class="container">

            <div class="row">
                <div class="col-lg-10 col-lg-offset-2">
                    <hr class="section-heading-spacer">
                    <div class="clearfix"></div>
                    <div class="lead"><h2 id="index">Index</h2>

<hr />

<ul>
  <li><a class="page-scroll" href="#Lab01">Lab 1: Install Docker</a></li>
  <li><a class="page-scroll" href="#Lab02">Lab 2: Our First Containers</a></li>
  <li><a class="page-scroll" href="#Lab03">Lab 3: Background Containers</a></li>
  <li><a class="page-scroll" href="#Lab04">Lab 4: Restarting and Attaching to Containers</a></li>
  <li><a class="page-scroll" href="#Lab05">Lab 5: Understanding Docker Images</a></li>
  <li><a class="page-scroll" href="#Lab06">Lab 6: Building Images Interactively</a></li>
  <li><a class="page-scroll" href="#Lab07">Lab 7: Building Docker Images</a></li>
  <li><a class="page-scroll" href="#Lab08">Lab 8: CMD and ENTRYPOINT</a></li>
  <li><a class="page-scroll" href="#Lab09">Lab 9: Copying files during the build</a></li>
  <li><a class="page-scroll" href="#Lab10">Lab 10: Operations with images</a></li>
  <li><a class="page-scroll" href="#Quiz">Docker Quiz</a></li>
</ul>
</div>
                </div>
            </div>

        </div>

    </div>
</section>

		<section id=workshop>
<!-- Page Content -->

  
    
    <section id=Lab01>
    <div class="content-section-a">

        <div class="container">

            <div class="row">
		<div class="col-lg-10 col-lg-offset-2">
                    <hr class="section-heading-spacer">
                    <div class="clearfix"></div>
                    <div class="lead"><h2 id="lab-1-install-docker-for-your-own-device">Lab 1: Install Docker for your own Device</h2>

<h4 id="objectives">Objectives</h4>

<p>At the end of this lab, you will have:</p>

<ul>
  <li>
    <p>Installed Docker on your own device.</p>
  </li>
  <li>
    <p>Run som commands to check if Docker is installed correctly.</p>
  </li>
</ul>

<hr />

<h4 id="step-1-download-docker">Step 1: Download Docker</h4>

<p>First we must download Docker for your own device, get the right packaged for your platform:</p>

<ul>
  <li><a href="https://download.docker.com/win/stable/InstallDocker.msi">Windows 10 Professional or Enterprise 64-bit</a></li>
  <li><a href="https://download.docker.com/mac/stable/Docker.dmg">Mac OS Yosemite 10.10.3 or above</a></li>
</ul>

<p>For previous OS versions use <a href="http://labs.play-with-docker.com/">play-with-docker</a>.</p>

<hr />

<h4 id="step-2-install-docker-if-you-dont-use-play-with-docker">Step 2: Install Docker (if you don’t use play-with-docker)</h4>

<p>Double-click on <code class="highlighter-rouge">Docker.dmg</code> for Mac and <code class="highlighter-rouge">InstallDocker.msi</code> for Windows to start the install process.</p>

<p>When the installation finishes, Docker starts automatically. On the Mac a whale appears in the top status bar and for Windows the whale appears in the notification area. This indicates that Docker is running and accessible from a terminal.</p>

<hr />

<h4 id="step-3-run-it">Step 3: Run it</h4>

<p>Open a command-line terminal <em>(for Windows try PowerShell or install <a href="https://cygwin.com/install.html">Cygwin</a>)</em> and try out some Docker commands. Or if you use play-with-docker press +ADD NEW INSTANCE.</p>

<ul>
  <li>Run <code class="highlighter-rouge">docker version</code> to check that you have the latest release installed.</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>$ docker version
Client:
 Version:      17.03.1-ce
 API version:  1.27
 Go version:   go1.7.5
 Git commit:   c6d412e
 Built:        Tue Mar 28 00:40:02 2017
 OS/Arch:      darwin/amd64

Server:
 Version:      17.03.1-ce
 API version:  1.27 (minimum version 1.12)
 Go version:   go1.7.5
 Git commit:   c6d412e
 Built:        Fri Mar 24 00:00:50 2017
 OS/Arch:      linux/amd64
 Experimental: true
</code></pre>
</div>

<ul>
  <li>Run <code class="highlighter-rouge">docker run hello-world</code> to verify that Docker is pulling images and running as expected.</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>$ docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
78445dd45222: Already exists
Digest: sha256:c5515758d4c5e1e838e9cd307f6c6a0d620b5e07e6f927b07d05f6d12a1ac8d7
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/

</code></pre>
</div>

<p>In the next lab, we will learn how to run our first application with Docker.</p>
</div>
                </div>
            </div>

        </div>
        <!-- /.container -->

    </div>
    </section>
    <!-- /.content-section-a -->
    

  
    

    <section id=Lab02>
    <div class="content-section-b">

        <div class="container">

            <div class="row">
		<div class="col-lg-10 col-lg-offset-2">
                    <hr class="section-heading-spacer">
                    <div class="clearfix"></div>
                    <div class="lead"><h2 id="lab-2-our-first-containers">Lab 2: Our First Containers</h2>

<hr />

<h4 id="objectives">Objectives</h4>

<p>At the end of this lab, you will have:</p>

<ul>
  <li>
    <p>Seen Docker in action.</p>
  </li>
  <li>
    <p>Started your first containers.</p>
  </li>
</ul>

<h4 id="docker-architecture">Docker architecture</h4>

<p>Docker is a client-server application.</p>

<ul>
  <li>
    <p><strong>The Docker Engine (or “daemon”)</strong></p>

    <ul>
      <li>Receives and processes incoming Docker API requests.</li>
    </ul>
  </li>
  <li>
    <p><strong>The Docker client</strong></p>

    <ul>
      <li>Talks to the Docker daemon via the Docker API.</li>
      <li>We’ll use mostly the CLI embedded within the docker binary.</li>
    </ul>
  </li>
  <li>
    <p><strong>Docker Hub Registry</strong></p>

    <ul>
      <li>Collection of public images.</li>
      <li>The Docker daemon talks to it via the registry API.</li>
    </ul>
  </li>
</ul>

<hr />

<h4 id="step-1-hello-world">Step 1: Hello World</h4>

<p>In your Docker environment, just run the following command:</p>
<div class="highlighter-rouge"><pre class="highlight"><code>$ docker run busybox echo hello world
hello world
</code></pre>
</div>
<p>That was our first container !!</p>

<ul>
  <li>
    <p>We used one of the smallest, simplest images available: busybox.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">busybox</code> is typically used in embedded systems (phones, routers…).</p>
  </li>
  <li>
    <p>We ran a single process and echo’ed hello world.</p>
  </li>
</ul>

<hr />

<h4 id="step-2-a-more-useful-container">Step 2: A more useful container</h4>

<p>Let’s run a more exciting container:</p>
<div class="highlighter-rouge"><pre class="highlight"><code>$ docker run -it ubuntu
</code></pre>
</div>
<ul>
  <li>
    <p>This is a brand new container.</p>
  </li>
  <li>
    <p>It runs a bare-bones, no-frills ubuntu system.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">-it</code> is shorthand for <code class="highlighter-rouge">-i -t</code>.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">-i</code> tells Docker to connect us to the container’s stdin.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">-t</code> tells Docker that we want a pseudo-terminal.</p>
  </li>
</ul>

<p>Let’s do something in our container. Try to run figlet in our container.</p>
<div class="highlighter-rouge"><pre class="highlight"><code>root@04c0bb0a6c07:/# figlet hello
bash: figlet: command not found
</code></pre>
</div>
<p>Alright, we need to install it.</p>

<p><strong>An observation</strong></p>

<p>Let’s check how many packages are installed here.</p>
<div class="highlighter-rouge"><pre class="highlight"><code>root@04c0bb0a6c07:/# dpkg -l | wc -l 
103
</code></pre>
</div>
<ul>
  <li>
    <p><code class="highlighter-rouge">dpkg -l</code> lists the packages installed in our container</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">wc -l</code> counts them</p>
  </li>
  <li>
    <p>If you have a Debian or Ubuntu machine, you can run the same command and compare the results.</p>
  </li>
</ul>

<p>We want figlet, so let’s install it:</p>
<div class="highlighter-rouge"><pre class="highlight"><code>root@04c0bb0a6c07:/# apt-get update
...

Fetched 1514 kB in 14s (103 kB/s) 
Reading package lists... Done

root@04c0bb0a6c07:/# apt-get install figlet
Reading package lists... Done

...

update-alternatives: using /usr/bin/figlet-figlet to provide /usr/bin/figlet (figlet) in auto mode
</code></pre>
</div>
<p>One minute later, figlet is installed!</p>
<div class="highlighter-rouge"><pre class="highlight"><code>root@04c0bb0a6c07:/# figlet hello
     _          _ _
    | |__   ___| | | ___
    |  _ \ / _ \ | |/ _ \
    | | | |  __/ | | (_) |
    |_| |_|\___|_|_|\___/
</code></pre>
</div>

<p>Just exit the shell, like you would usually do.</p>

<p>(E.g. with ^D or exit)</p>
<div class="highlighter-rouge"><pre class="highlight"><code> root@04c0bb0a6c07:/# exit
</code></pre>
</div>
<ul>
  <li>
    <p>Our container is now in a <em>stopped</em> state.</p>
  </li>
  <li>
    <p>It still exists on disk, but all compute resources have been freed up.</p>
  </li>
</ul>

<p>What if we start a new container, and try to run figlet again?</p>
<div class="highlighter-rouge"><pre class="highlight"><code>$ docker run -it ubuntu 
root@b13c164401fb:/# figlet 
bash: figlet: command not found
</code></pre>
</div>
<ul>
  <li>
    <p>We started a <em>brand new container</em>.</p>
  </li>
  <li>
    <p>The basic Ubuntu image was used, and figlet is not here.</p>
  </li>
</ul>

<p>We will see in the next chapters how to bake a custom image with figlet.</p>
</div>
                </div>
            </div>

        </div>
        <!-- /.container -->

    </div>
    </section>
    <!-- /.content-section-b -->
    

</section>

		<section id="contact">
	<div class="banner">
		<div class="container">

			<div class="row">
				<div class="col-lg-6">
					<h2>Keep in Touch:</h2>
				</div>
				<div class="col-lg-6">
					<ul class="list-inline banner-social-buttons">
						
						<li>
							<a href="mailto:info@hcs-company.com" class="btn btn-default btn-lg"><i class="fa fa-email fa-fw"></i> <span class="network-name">email</span></a>
						</li>
						
						<li>
							<a href="https://www.linkedin.com/company-beta/10369666/" class="btn btn-default btn-lg"><i class="fa fa-linkedin fa-fw"></i> <span class="network-name">linkedin</span></a>
						</li>
						
						<li>
							<a href="https://twitter.com/HCS_company" class="btn btn-default btn-lg"><i class="fa fa-twitter fa-fw"></i> <span class="network-name">twitter</span></a>
						</li>
						
						<li>
							<a href="https://www.facebook.com/hcscompany/" class="btn btn-default btn-lg"><i class="fa fa-facebook fa-fw"></i> <span class="network-name">facebook</span></a>
						</li>
						
					</ul>
				</div>
			</div>

		</div>
		<!-- /.container -->

	</div>
</section>
<!-- /.banner -->
		<!-- Footer -->
<footer>
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <p class="copyright text-muted small">Copyright &copy; 2017 <a href="http://www.hcs-company.com/">HCS-Company B.V.</a></p>
            </div>
        </div>
    </div>
</footer>

		<!-- jQuery Version 1.11.0 -->
<script src="js/jquery-1.11.0.js"></script>

<!-- Plugin JavaScript -->
    <script src="js/jquery.easing.min.js"></script>

<!-- Bootstrap Core JavaScript -->
<script src="js/bootstrap.min.js"></script>

<!-- Custom Theme JavaScript -->
<script src="js/landing-page.js"></script>

<!-- Custom  JavaScript copy/past-->
<script type="text/javascript">
$(document).ready(function () {
    //Disable cut copy paste
    $('body').bind('cut copy paste', function (e) {
        e.preventDefault();
    });
    //Disable mouse right click
    $("body").on("contextmenu",function(e){
        return false;
    });
});
</script>

	</body>
</html>
